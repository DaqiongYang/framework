plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
    // 使用kotlin
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.41'
    id 'java'
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}
subprojects{
    //使用kotlin插件
    apply plugin: 'kotlin' // Required for Kotlin integration
    apply plugin: "kotlin-spring" // https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'eclipse'
    apply plugin: 'jacoco'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.qzl'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    // 指定资源文件路径
    sourceSets["main"].java.srcDir("src/main/kotlin")
    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'
    jar {
        baseName = 'gs-rest-service'
        version = '0.1.0'
    }

    bootJar {
        enabled = false  // 默认不需要打可执行jar包
    }
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }
    dependencies {
        implementation 'org.jetbrains.kotlin:kotlin-stdlib'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "http://XXX:8081/repository/mxq/") {
                    authentication(userName: "XXX", password: "XXX.")
                }
            }
        }
    }
}
